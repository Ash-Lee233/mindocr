# 1.This file shows the parsed IR info when graph evaluating failed to help find the problem.
# 2.You can search the last `------------------------>` to the node which is inferred failed.
# 3.Refer to https://www.mindspore.cn/search?inputValue=analyze_fail.dat to get more instructions.
# ===============================================================================

# [No.1] Default_wrapper.1
# In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:38/    def construct(self, x):/
funcgraph fg_1(
        %para1 : Tensor(F32)[8, 128, 1, 16]    # x
        , %para2 : Ref[Tensor(F32)][1024, 128]    # seq_encoder.weight_ih_l0
        , %para3 : Ref[Tensor(F32)][1024, 128]    # seq_encoder.weight_ih_l0_reverse
        , %para4 : Ref[Tensor(F32)][1024, 512]    # seq_encoder.weight_ih_l1
        , %para5 : Ref[Tensor(F32)][1024, 512]    # seq_encoder.weight_ih_l1_reverse
        , %para6 : Ref[Tensor(F32)][1024, 256]    # seq_encoder.weight_hh_l0
        , %para7 : Ref[Tensor(F32)][1024, 256]    # seq_encoder.weight_hh_l0_reverse
        , %para8 : Ref[Tensor(F32)][1024, 256]    # seq_encoder.weight_hh_l1
        , %para9 : Ref[Tensor(F32)][1024, 256]    # seq_encoder.weight_hh_l1_reverse
        , %para10 : Ref[Tensor(F32)][1024]    # seq_encoder.bias_ih_l0
        , %para11 : Ref[Tensor(F32)][1024]    # seq_encoder.bias_ih_l0_reverse
        , %para12 : Ref[Tensor(F32)][1024]    # seq_encoder.bias_ih_l1
        , %para13 : Ref[Tensor(F32)][1024]    # seq_encoder.bias_ih_l1_reverse
        , %para14 : Ref[Tensor(F32)][1024]    # seq_encoder.bias_hh_l0
        , %para15 : Ref[Tensor(F32)][1024]    # seq_encoder.bias_hh_l0_reverse
        , %para16 : Ref[Tensor(F32)][1024]    # seq_encoder.bias_hh_l1
        , %para17 : Ref[Tensor(F32)][1024]    # seq_encoder.bias_hh_l1_reverse
    ) {

#------------------------> 0
    %1 = FuncGraph::fg_20(%para1)    #(Tensor(F32)[8, 128, 1, 16])    # fg_20=Default.20 #scope: Default
#[CNode]49
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]50
}
# order:
#   1: @Default_wrapper.1:[CNode]49{[0]: ValueNode<FuncGraph> Default.20, [1]: x}
#   2: @Default_wrapper.1:[CNode]50{[0]: ValueNode<Primitive> Return, [1]: [CNode]49}


# [No.2] Default.20
# In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:38/    def construct(self, x):/
funcgraph fg_20[fg_1](
        %para18 : Tensor(F32)[8, 128, 1, 16]    # x
    ) {
    %1 : Tuple[I64*4]TupleShape(NoShape, NoShape, NoShape, NoShape) = Primitive::getattr{prim_type=1}(%para18, "shape")    #(Tensor(F32)[8, 128, 1, 16], StringNoShape) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]51
    %2 : I64NoShape = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%1, I64(2))    #(Tuple[I64*4]TupleShape(NoShape, NoShape, NoShape, NoShape), I64NoShape) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]52
    %3 : BoolNoShape = DoSignaturePrimitive::S-Prim-equal{prim_type=1}(%2, I64(1))    #(I64NoShape, I64NoShape) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]53
    %4 : BoolNoShape = FuncGraph::fg_11(%3)    #(BoolNoShape)    # fg_11=bool_.11 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]54
    %5 : FuncNoShape = Primitive::Switch{prim_type=1}(%4, FuncGraph::fg_21, FuncGraph::fg_55)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_21=21.21, fg_55=55.55 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]56

#------------------------> 1
    %6 = %5() #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]57
    Primitive::Return{prim_type=1}(%6)    #(Undefined) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]58
}
# order:
#   1: @Default.20:[CNode]51{[0]: ValueNode<Primitive> getattr, [1]: x, [2]: ValueNode<StringImm> shape}
#   2: @Default.20:[CNode]52{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]51, [2]: ValueNode<Int64Imm> 2}
#   3: @Default.20:[CNode]53{[0]: ValueNode<DoSignaturePrimitive> S-Prim-equal, [1]: [CNode]52, [2]: ValueNode<Int64Imm> 1}
#   4: @Default.20:[CNode]54{[0]: ValueNode<FuncGraph> bool_.11, [1]: [CNode]53}
#   5: @Default.20:[CNode]56{[0]: ValueNode<Primitive> Switch, [1]: [CNode]54, [2]: ValueNode<FuncGraph> 21.21, [3]: ValueNode<FuncGraph> 55.55}
#   6: @Default.20:[CNode]57{[0]: [CNode]56}
#   7: @Default.20:[CNode]58{[0]: ValueNode<Primitive> Return, [1]: [CNode]57}


# [No.3] 21.21
# In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/
funcgraph fg_21[fg_20](
) {

#------------------------> 2
    %1 = FuncGraph::fg_22()    # fg_22=22.22 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]59
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/#[CNode]60
}
# order:
#   1: @21.21:[CNode]59{[0]: ValueNode<FuncGraph> 22.22}
#   2: @21.21:[CNode]60{[0]: ValueNode<Primitive> Return, [1]: [CNode]59}


# [No.4] 22.22
# In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:48/        assert x.shape[2]==1, 'Feature height must be 1'/
funcgraph fg_22[fg_20](
) {
    %1 : BoolNoShape = DoSignaturePrimitive::S-Prim-is_{prim_type=1}((Tensor(43)[2, 8, 256], Tensor(43)[2, 8, 256]), None)    #(Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)), NoneTypeNoShape) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:52/        if self.hx is None:/#[CNode]61
    %2 : BoolNoShape = FuncGraph::fg_11(%1)    #(BoolNoShape)    # fg_11=bool_.11 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:52/        if self.hx is None:/#[CNode]62
    %3 : FuncNoShape = Primitive::Switch{prim_type=1}(%2, FuncGraph::fg_63, FuncGraph::fg_23)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_63=✓22.63, fg_23=✗22.23 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:52/        if self.hx is None:/#[CNode]64

#------------------------> 3
    %4 = %3() #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:52/        if self.hx is None:/#[CNode]65
    %5 = FuncGraph::fg_66(%4)    #(Undefined)    # fg_66=↓22.66 #scope: Default
#[CNode]67
    Primitive::Return{prim_type=1}(%5)    #(Undefined) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:52/        if self.hx is None:/#[CNode]68
}
# order:
#   1: @22.22:[CNode]69{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: x}
#   2: @22.22:[CNode]70{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: ValueNode<StringImm> axis}
#   3: @22.22:[CNode]71{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: ValueNode<Int64Imm> 2}
#   4: @22.22:[CNode]72{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_dict, [1]: [CNode]70, [2]: [CNode]71}
#   5: @22.22:x{[0]: ValueNode<UnpackCall> unpack_call.73, [1]: ValueNode<FuncGraph> squeeze.74, [2]: [CNode]69, [3]: [CNode]72}
#   6: @22.22:[CNode]75{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: ValueNode<Int64Imm> 2, [2]: ValueNode<Int64Imm> 0, [3]: ValueNode<Int64Imm> 1}
#   7: @22.22:x{[0]: ValueNode<FuncGraph> transpose.76, [1]: x, [2]: [CNode]75}
#   8: @22.22:[CNode]61{[0]: ValueNode<DoSignaturePrimitive> S-Prim-is_, [1]: ValueNode<ValueTuple> (Tensor(shape=[2, 8, 256], dtype=Float32, value=[...]), Tensor(shape=[2, 8, 256], dtype=Float32, value=[...])), [2]: ValueNode<None> None}
#   9: @22.22:[CNode]62{[0]: ValueNode<FuncGraph> bool_.11, [1]: [CNode]61}
#  10: @22.22:[CNode]64{[0]: ValueNode<Primitive> Switch, [1]: [CNode]62, [2]: ValueNode<FuncGraph> ✓22.63, [3]: ValueNode<FuncGraph> ✗22.23}
#  11: @22.22:[CNode]65{[0]: [CNode]64}
#  12: @22.22:[CNode]67{[0]: ValueNode<FuncGraph> ↓22.66, [1]: [CNode]65}
#  13: @22.22:[CNode]68{[0]: ValueNode<Primitive> Return, [1]: [CNode]67}


# [No.5] ✗22.23
# In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:52/        if self.hx is None:/
funcgraph fg_23[fg_22](
) {
    %1 : $(22.22):Tuple[Tensor(F32)]TupleShape((8, 128, 1, 16)) = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%para18)    #(Tensor(F32)[8, 128, 1, 16]) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:49/        x = ops.squeeze(x, axis=2) # [N, C, W]/#[CNode]69
    %2 : $(22.22):Tuple[String]TupleShape(NoShape) = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}("axis")    #(StringNoShape) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:49/        x = ops.squeeze(x, axis=2) # [N, C, W]/#[CNode]70
    %3 : $(22.22):Tuple[I64]TupleShape(NoShape) = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(I64(2))    #(I64NoShape) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:49/        x = ops.squeeze(x, axis=2) # [N, C, W]/#[CNode]71
    %4 : $(22.22):Dictionary[[axis,],[Int64]]NoShape = DoSignaturePrimitive::S-Prim-make_dict{prim_type=1}(%2, %3)    #(Tuple[String]TupleShape(NoShape), Tuple[I64]TupleShape(NoShape)) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:49/        x = ops.squeeze(x, axis=2) # [N, C, W]/#[CNode]72
    %5 : $(22.22):Tensor(F32)[8, 128, 16] = UnpackCall::unpack_call(FuncGraph::fg_74, %1, %4)    #(FuncNoShape, Tuple[Tensor(F32)]TupleShape((8, 128, 1, 16)), Dictionary[[axis,],[Int64]]NoShape)    # fg_74=squeeze.74 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:49/        x = ops.squeeze(x, axis=2) # [N, C, W]/#x
    %6 : $(22.22):Tuple[I64*3]TupleShape(NoShape, NoShape, NoShape) = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(I64(2), I64(0), I64(1))    #(I64NoShape, I64NoShape, I64NoShape) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:50/        x = ops.transpose(x, (2, 0, 1)) # [W, N, C]/#[CNode]75
    %7 : $(22.22):Tensor(F32)[16, 8, 128] = FuncGraph::fg_76(%5, %6)    #(Tensor(F32)[8, 128, 16], Tuple[I64*3]TupleShape(NoShape, NoShape, NoShape))    # fg_76=transpose.76 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:50/        x = ops.transpose(x, (2, 0, 1)) # [W, N, C]/#x

#------------------------> 4
    %8 = FuncGraph::fg_77(%7, (Tensor(43)[2, 8, 256], Tensor(43)[2, 8, 256]))    #(Tensor(F32)[16, 8, 128], Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)))    # fg_77=LSTM.77 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:55/            x = self.seq_encoder(x, self.hx) #/#x
    Primitive::Return{prim_type=1}(%8)    #(Undefined) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:52/        if self.hx is None:/#[CNode]78
}
# order:
#   1: @✗22.23:x{[0]: ValueNode<FuncGraph> LSTM.77, [1]: x, [2]: ValueNode<ValueTuple> (Tensor(shape=[2, 8, 256], dtype=Float32, value=[...]), Tensor(shape=[2, 8, 256], dtype=Float32, value=[...]))}
#   2: @✗22.23:[CNode]78{[0]: ValueNode<Primitive> Return, [1]: x}


# [No.6] LSTM.24
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:544/    def construct(self, x, hx=None, seq_length=None):/
funcgraph fg_24[fg_1](
        %para19 : Tensor(F32)[16, 8, 128]    # фx
        , %para20 : Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256))    # фhx
    ) {
    %1 : NoneTypeNoShape = DoSignaturePrimitive::S-Prim-_check_is_tensor{prim_type=1}("x", %para19, "LSTM")    #(StringNoShape, Tensor(F32)[16, 8, 128], StringNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:548/        _check_is_tensor("x", x, self.cls_name)/#[CNode]79
    %2 : NoneTypeNoShape = Primitive::stop_gradient{prim_type=1}(%1)    #(NoneTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]80
    %3 : BoolNoShape = DoSignaturePrimitive::S-Prim-is_not{prim_type=1}(%para20, None)    #(Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)), NoneTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:550/        if hx is not None:/#[CNode]81
    %4 : BoolNoShape = FuncGraph::fg_19(%3)    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:550/        if hx is not None:/#[CNode]82
    %5 : FuncNoShape = Primitive::Switch{prim_type=1}(%4, FuncGraph::fg_83, FuncGraph::fg_84)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_83=✓LSTM.83, fg_84=✗LSTM.84 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:550/        if hx is not None:/#[CNode]85
    %6 : Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)) = %5() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:550/        if hx is not None:/#[CNode]86

#------------------------> 5
    %7 = FuncGraph::fg_25(%6)    #(Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)))    # fg_25=↓LSTM.25 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]87
    %8 = Primitive::Depend{prim_type=1}[side_effect_propagate=I64(1)](%7, %2)    #(Undefined, NoneTypeNoShape) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]88
    Primitive::Return{prim_type=1}(%8)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:550/        if hx is not None:/#[CNode]89
}
# order:
#   1: @LSTM.24:[CNode]90{[0]: ValueNode<FuncGraph> bool_.19, [1]: ValueNode<BoolImm> false}
#   2: @LSTM.24:[CNode]91{[0]: ValueNode<Primitive> Switch, [1]: [CNode]90, [2]: ValueNode<FuncGraph> ↰LSTM.92, [3]: ValueNode<FuncGraph> ↱LSTM.93}
#   3: @LSTM.24:фmax_batch_size{[0]: [CNode]91}
#   4: @LSTM.24:[CNode]94{[0]: ValueNode<FuncGraph> bool_.19, [1]: ValueNode<BoolImm> true}
#   5: @LSTM.24:[CNode]95{[0]: ValueNode<Primitive> Switch, [1]: [CNode]94, [2]: ValueNode<FuncGraph> ↰LSTM.96, [3]: ValueNode<FuncGraph> ↱LSTM.97}
#   6: @LSTM.24:num_directions{[0]: [CNode]95}
#   7: @LSTM.24:[CNode]79{[0]: ValueNode<DoSignaturePrimitive> S-Prim-_check_is_tensor, [1]: ValueNode<StringImm> x, [2]: фx, [3]: ValueNode<StringImm> LSTM}
#   8: @LSTM.24:фx_dtype{[0]: ValueNode<Primitive> getattr, [1]: фx, [2]: ValueNode<StringImm> dtype}
#   9: @LSTM.24:[CNode]81{[0]: ValueNode<DoSignaturePrimitive> S-Prim-is_not, [1]: фhx, [2]: ValueNode<None> None}
#  10: @LSTM.24:[CNode]82{[0]: ValueNode<FuncGraph> bool_.19, [1]: [CNode]81}
#  11: @LSTM.24:[CNode]85{[0]: ValueNode<Primitive> Switch, [1]: [CNode]82, [2]: ValueNode<FuncGraph> ✓LSTM.83, [3]: ValueNode<FuncGraph> ✗LSTM.84}
#  12: @LSTM.24:[CNode]86{[0]: [CNode]85}
#  13: @LSTM.24:[CNode]87{[0]: ValueNode<FuncGraph> ↓LSTM.25, [1]: [CNode]86}
#  14: @LSTM.24:[CNode]88{[0]: ValueNode<Primitive> Depend, [1]: [CNode]87, [2]: [CNode]80}
#  15: @LSTM.24:[CNode]89{[0]: ValueNode<Primitive> Return, [1]: [CNode]88}


# [No.7] ↓LSTM.25
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:550/        if hx is not None:/
funcgraph fg_25[fg_24](
        %para21 : Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256))    # фhx
    ) {
    %1 : BoolNoShape = DoSignaturePrimitive::S-Prim-is_not{prim_type=1}(None, None)    #(NoneTypeNoShape, NoneTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:565/        if seq_length is not None:/#[CNode]98
    %2 : BoolNoShape = FuncGraph::fg_19(%1)    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:565/        if seq_length is not None:/#[CNode]99
    %3 : FuncNoShape = Primitive::Switch{prim_type=1}(%2, FuncGraph::fg_100, FuncGraph::fg_26)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_100=✓↓LSTM.100, fg_26=✗↓LSTM.26 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:565/        if seq_length is not None:/#[CNode]101

#------------------------> 6
    %4 = %3() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:565/        if seq_length is not None:/#[CNode]102
    Primitive::Return{prim_type=1}(%4)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:565/        if seq_length is not None:/#[CNode]103
}
# order:
#   1: @↓LSTM.25:[CNode]98{[0]: ValueNode<DoSignaturePrimitive> S-Prim-is_not, [1]: ValueNode<None> None, [2]: ValueNode<None> None}
#   2: @↓LSTM.25:[CNode]99{[0]: ValueNode<FuncGraph> bool_.19, [1]: [CNode]98}
#   3: @↓LSTM.25:[CNode]101{[0]: ValueNode<Primitive> Switch, [1]: [CNode]99, [2]: ValueNode<FuncGraph> ✓↓LSTM.100, [3]: ValueNode<FuncGraph> ✗↓LSTM.26}
#   4: @↓LSTM.25:[CNode]102{[0]: [CNode]101}
#   5: @↓LSTM.25:[CNode]103{[0]: ValueNode<Primitive> Return, [1]: [CNode]102}


# [No.8] ✗↓LSTM.26
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:565/        if seq_length is not None:/
funcgraph fg_26[fg_25](
) {

#------------------------> 7
    %1 = FuncGraph::fg_27()    # fg_27=↓↓LSTM.27 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]104
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:565/        if seq_length is not None:/#[CNode]105
}
# order:
#   1: @✗↓LSTM.26:[CNode]105{[0]: ValueNode<Primitive> Return, [1]: [CNode]104}
#   2: @✗↓LSTM.26:[CNode]104{[0]: ValueNode<FuncGraph> ↓↓LSTM.27}


# [No.9] ↓↓LSTM.27
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:565/        if seq_length is not None:/
funcgraph fg_27[fg_25](
) {
    %1 : BoolNoShape = FuncGraph::fg_19(Bool(0))    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:568/        if self.batch_first:/#[CNode]106
    %2 : FuncNoShape = Primitive::Switch{prim_type=1}(%1, FuncGraph::fg_107, FuncGraph::fg_108)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_107=✓↓↓LSTM.107, fg_108=✗↓↓LSTM.108 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:568/        if self.batch_first:/#[CNode]109
    %3 : Tensor(F32)[16, 8, 128] = %2() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:568/        if self.batch_first:/#[CNode]110

#------------------------> 8
    %4 = FuncGraph::fg_28(%3)    #(Tensor(F32)[16, 8, 128])    # fg_28=↓↓↓LSTM.28 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]111
    Primitive::Return{prim_type=1}(%4)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:568/        if self.batch_first:/#[CNode]112
}
# order:
#   1: @↓↓LSTM.27:[CNode]106{[0]: ValueNode<FuncGraph> bool_.19, [1]: ValueNode<BoolImm> false}
#   2: @↓↓LSTM.27:[CNode]109{[0]: ValueNode<Primitive> Switch, [1]: [CNode]106, [2]: ValueNode<FuncGraph> ✓↓↓LSTM.107, [3]: ValueNode<FuncGraph> ✗↓↓LSTM.108}
#   3: @↓↓LSTM.27:[CNode]110{[0]: [CNode]109}
#   4: @↓↓LSTM.27:[CNode]111{[0]: ValueNode<FuncGraph> ↓↓↓LSTM.28, [1]: [CNode]110}
#   5: @↓↓LSTM.27:[CNode]112{[0]: ValueNode<Primitive> Return, [1]: [CNode]111}


# [No.10] ↓↓↓LSTM.28
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:568/        if self.batch_first:/
funcgraph fg_28[fg_25](
        %para22 : Tensor(F32)[16, 8, 128]    # фx
    ) {
    %1 : BoolNoShape = FuncGraph::fg_19(Bool(1))    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:570/        if self.bidirectional:/#[CNode]113
    %2 : FuncNoShape = Primitive::Switch{prim_type=1}(%1, FuncGraph::fg_29, FuncGraph::fg_114)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_29=✓↓↓↓LSTM.29, fg_114=✗↓↓↓LSTM.114 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:570/        if self.bidirectional:/#[CNode]115

#------------------------> 9
    %3 = %2() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:570/        if self.bidirectional:/#[CNode]116
    %4 = Primitive::TupleGetItem{prim_type=1}(%3, I64(0))    #(Undefined, Undefined) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]117
    %5 = Primitive::TupleGetItem{prim_type=1}(%3, I64(1))    #(Undefined, Undefined) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]118
    %6 = FuncGraph::fg_119(%4, %5)    #(Undefined, Undefined)    # fg_119=↓↓↓↓LSTM.119 #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]120
    Primitive::Return{prim_type=1}(%6)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:570/        if self.bidirectional:/#[CNode]121
}
# order:
#   1: @↓↓↓LSTM.28:[CNode]113{[0]: ValueNode<FuncGraph> bool_.19, [1]: ValueNode<BoolImm> true}
#   2: @↓↓↓LSTM.28:[CNode]115{[0]: ValueNode<Primitive> Switch, [1]: [CNode]113, [2]: ValueNode<FuncGraph> ✓↓↓↓LSTM.29, [3]: ValueNode<FuncGraph> ✗↓↓↓LSTM.114}
#   3: @↓↓↓LSTM.28:[CNode]116{[0]: [CNode]115}
#   4: @↓↓↓LSTM.28:[CNode]120{[0]: ValueNode<FuncGraph> ↓↓↓↓LSTM.119, [1]: [CNode]117, [2]: [CNode]118}
#   5: @↓↓↓LSTM.28:[CNode]121{[0]: ValueNode<Primitive> Return, [1]: [CNode]120}
#   6: @↓↓↓LSTM.28:[CNode]117{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]116, [2]: ValueNode<Int64Imm> 0}
#   7: @↓↓↓LSTM.28:[CNode]118{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]116, [2]: ValueNode<Int64Imm> 1}


# [No.11] ✓↓↓↓LSTM.29
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:570/        if self.bidirectional:/
funcgraph fg_29[fg_28](
) {

#------------------------> 10
    %1 = FuncGraph::fg_30(%para22, %para21, None)    #(Tensor(F32)[16, 8, 128], Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)), NoneTypeNoShape)    # fg_30=_stacked_bi_dynamic_rnn.30 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]122
    %2 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%1, I64(0))    #(Undefined, Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#x_n
    %3 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%1, I64(1))    #(Undefined, Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#hx_n
    %4 = Primitive::MakeTuple{prim_type=1}(%2, %3)    #(Undefined, Undefined) #scope: Default
      # In file /Users/Samit/Data/Work/HW/ms_kit/ocr/mindocr/rnn.py:53/            x = self.seq_encoder(x) #/#[CNode]123
    Primitive::Return{prim_type=1}(%4)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:570/        if self.bidirectional:/#[CNode]124
}
# order:
#   1: @✓↓↓↓LSTM.29:[CNode]122{[0]: ValueNode<FuncGraph> _stacked_bi_dynamic_rnn.30, [1]: фx, [2]: фhx, [3]: ValueNode<None> None}
#   2: @✓↓↓↓LSTM.29:x_n{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]122, [2]: ValueNode<Int64Imm> 0}
#   3: @✓↓↓↓LSTM.29:hx_n{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]122, [2]: ValueNode<Int64Imm> 1}
#   4: @✓↓↓↓LSTM.29:[CNode]124{[0]: ValueNode<Primitive> Return, [1]: [CNode]123}
#   5: @✓↓↓↓LSTM.29:[CNode]123{[0]: ValueNode<Primitive> MakeTuple, [1]: x_n, [2]: hx_n}


# [No.12] _stacked_bi_dynamic_rnn.30
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:461/    def _stacked_bi_dynamic_rnn(self, x, h, seq_length):/
funcgraph fg_30[fg_1](
        %para23 : Tensor(F32)[16, 8, 128]    # pre_layer
        , %para24 : Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256))    # h
        , %para25 : NoneTypeNoShape    # seq_length
    ) {

#------------------------> 11
    %1 = FuncGraph::fg_31(I64(0), %para23, (), (), I64(0))    #(I64NoShape, Tensor(F32)[16, 8, 128], Tuple[]TupleShape(), Tuple[]TupleShape(), I64NoShape)    # fg_31=↵_stacked_bi_dynamic_rnn.31 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]125
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]126
}
# order:
#   1: @_stacked_bi_dynamic_rnn.30:[CNode]127{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_range, [1]: ValueNode<Int64Imm> 2}
#   2: @_stacked_bi_dynamic_rnn.30:[CNode]128{[0]: ValueNode<FuncGraph> ms_len.129, [1]: [CNode]127}
#   3: @_stacked_bi_dynamic_rnn.30:[CNode]126{[0]: ValueNode<Primitive> Return, [1]: [CNode]125}
#   4: @_stacked_bi_dynamic_rnn.30:[CNode]125{[0]: ValueNode<FuncGraph> ↵_stacked_bi_dynamic_rnn.31, [1]: ValueNode<Int64Imm> 0, [2]: pre_layer, [3]: ValueNode<ValueTuple> (), [4]: ValueNode<ValueTuple> (), [5]: ValueNode<Int64Imm> 0}


# [No.13] ↵_stacked_bi_dynamic_rnn.31
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/
funcgraph fg_31[fg_30](
        %para26 : I64NoShape    # @[CNode]32
        , %para27 : Tensor(F32)[16, 8, 128]    # фpre_layer
        , %para28 : Tuple[]TupleShape()    # фh_n
        , %para29 : Tuple[]TupleShape()    # фc_n
        , %para30 : I64NoShape    # фoutput
    ) {
    %1 : $(_stacked_bi_dynamic_rnn.30):Tuple[I64*2]TupleShape(NoShape, NoShape) = DoSignaturePrimitive::S-Prim-make_range{prim_type=1}(I64(2))    #(I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]127
    %2 : $(_stacked_bi_dynamic_rnn.30):I64NoShape = FuncGraph::fg_129(%1)    #(Tuple[I64*2]TupleShape(NoShape, NoShape))    # fg_129=ms_len.129 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]128
    %3 : BoolNoShape = MultitypeFuncGraph::less{(Number, Number), (String, String), (Number, Tensor), (Tensor, Tensor), (Tensor, Number)}(%para26, %2)    #(I64NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]130
    %4 : FuncNoShape = Primitive::Switch{prim_type=1}(%3, FuncGraph::fg_33, FuncGraph::fg_131)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_33=↻_stacked_bi_dynamic_rnn.33, fg_131=↓_stacked_bi_dynamic_rnn.131 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]132

#------------------------> 19
    %5 = %4() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]133
    Primitive::Return{prim_type=1}(%5)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]134
}
# order:
#   1: @↵_stacked_bi_dynamic_rnn.31:[CNode]130{[0]: ValueNode<MultitypeFuncGraph> less.7, [1]: @[CNode]32, [2]: [CNode]128}
#   2: @↵_stacked_bi_dynamic_rnn.31:[CNode]132{[0]: ValueNode<Primitive> Switch, [1]: [CNode]130, [2]: ValueNode<FuncGraph> ↻_stacked_bi_dynamic_rnn.33, [3]: ValueNode<FuncGraph> ↓_stacked_bi_dynamic_rnn.131}
#   3: @↵_stacked_bi_dynamic_rnn.31:[CNode]133{[0]: [CNode]132}
#   4: @↵_stacked_bi_dynamic_rnn.31:[CNode]134{[0]: ValueNode<Primitive> Return, [1]: [CNode]133}


# [No.14] ↻_stacked_bi_dynamic_rnn.33
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/
funcgraph fg_33[fg_31](
) {
    %1 : I64NoShape = MultitypeFuncGraph::add{(Number, Tensor), (Number, Number), (Tuple, Tuple), (Tensor, List), (Tuple, Tensor), (CSRTensor, CSRTensor), (Tensor, Tuple), (Tensor, Number), (COOTensor, COOTensor), (List, Tensor), (List, List), (Tensor, Tensor), (String, String), (COOTensor, Tensor), (RowTensor, Tensor), (NoneType, NoneType), (Tensor, COOTensor)}(%para26, I64(1))    #(I64NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]32
    %2 : I64NoShape = Primitive::stop_gradient{prim_type=1}(%1)    #(I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]135
    %3 : BoolNoShape = FuncGraph::fg_19(Bool(1))    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:469/            if self.has_bias:/#[CNode]136
    %4 : FuncNoShape = Primitive::Switch{prim_type=1}(%3, FuncGraph::fg_137, FuncGraph::fg_138)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_137=✓↻_stacked_bi_dynamic_rnn.137, fg_138=✗↻_stacked_bi_dynamic_rnn.138 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:469/            if self.has_bias:/#[CNode]139
    %5 : Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)) = %4() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:469/            if self.has_bias:/#[CNode]140
    %6 : Ref[Tensor(F32)][1024, 128] = Primitive::TupleGetItem{prim_type=1}(%5, I64(0))    #(Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]141
    %7 : Ref[Tensor(F32)][1024, 256] = Primitive::TupleGetItem{prim_type=1}(%5, I64(1))    #(Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]142
    %8 : Ref[Tensor(F32)][1024] = Primitive::TupleGetItem{prim_type=1}(%5, I64(2))    #(Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]143
    %9 : Ref[Tensor(F32)][1024] = Primitive::TupleGetItem{prim_type=1}(%5, I64(3))    #(Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]144
    %10 : Ref[Tensor(F32)][1024, 128] = Primitive::TupleGetItem{prim_type=1}(%5, I64(4))    #(Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]145
    %11 : Ref[Tensor(F32)][1024, 256] = Primitive::TupleGetItem{prim_type=1}(%5, I64(5))    #(Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]146
    %12 : Ref[Tensor(F32)][1024] = Primitive::TupleGetItem{prim_type=1}(%5, I64(6))    #(Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]147
    %13 : Ref[Tensor(F32)][1024] = Primitive::TupleGetItem{prim_type=1}(%5, I64(7))    #(Tuple[Ref[Tensor(F32)]*8]TupleShape((1024, 128), (1024, 256), (1024), (1024), (1024, 128), (1024, 256), (1024), (1024)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]148

#------------------------> 20
    %14 = FuncGraph::fg_34(%6, %7, %8, %9, %10, %11, %12, %13)    #(Ref[Tensor(F32)][1024, 128], Ref[Tensor(F32)][1024, 256], Ref[Tensor(F32)][1024], Ref[Tensor(F32)][1024], Ref[Tensor(F32)][1024, 128], Ref[Tensor(F32)][1024, 256], Ref[Tensor(F32)][1024], Ref[Tensor(F32)][1024])    # fg_34=↓↻_stacked_bi_dynamic_rnn.34 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]149
    %15 = Primitive::Depend{prim_type=1}[side_effect_propagate=I64(1)](%14, %2)    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]150
    Primitive::Return{prim_type=1}(%15)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:469/            if self.has_bias:/#[CNode]151
}
# order:
#   1: @↻_stacked_bi_dynamic_rnn.33:фi{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]127, [2]: @[CNode]32}
#   2: @↻_stacked_bi_dynamic_rnn.33:[CNode]32{[0]: ValueNode<MultitypeFuncGraph> add.6, [1]: @[CNode]32, [2]: ValueNode<Int64Imm> 1}
#   3: @↻_stacked_bi_dynamic_rnn.33:фoffset{[0]: ValueNode<DoSignaturePrimitive> S-Prim-mul, [1]: фi, [2]: ValueNode<Int64Imm> 2}
#   4: @↻_stacked_bi_dynamic_rnn.33:[CNode]136{[0]: ValueNode<FuncGraph> bool_.19, [1]: ValueNode<BoolImm> true}
#   5: @↻_stacked_bi_dynamic_rnn.33:[CNode]139{[0]: ValueNode<Primitive> Switch, [1]: [CNode]136, [2]: ValueNode<FuncGraph> ✓↻_stacked_bi_dynamic_rnn.137, [3]: ValueNode<FuncGraph> ✗↻_stacked_bi_dynamic_rnn.138}
#   6: @↻_stacked_bi_dynamic_rnn.33:[CNode]140{[0]: [CNode]139}
#   7: @↻_stacked_bi_dynamic_rnn.33:[CNode]149{[0]: ValueNode<FuncGraph> ↓↻_stacked_bi_dynamic_rnn.34, [1]: [CNode]141, [2]: [CNode]142, [3]: [CNode]143, [4]: [CNode]144, [5]: [CNode]145, [6]: [CNode]146, [7]: [CNode]147, [8]: [CNode]148}
#   8: @↻_stacked_bi_dynamic_rnn.33:[CNode]150{[0]: ValueNode<Primitive> Depend, [1]: [CNode]149, [2]: [CNode]135}
#   9: @↻_stacked_bi_dynamic_rnn.33:[CNode]151{[0]: ValueNode<Primitive> Return, [1]: [CNode]150}
#  10: @↻_stacked_bi_dynamic_rnn.33:[CNode]141{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]140, [2]: ValueNode<Int64Imm> 0}
#  11: @↻_stacked_bi_dynamic_rnn.33:[CNode]142{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]140, [2]: ValueNode<Int64Imm> 1}
#  12: @↻_stacked_bi_dynamic_rnn.33:[CNode]143{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]140, [2]: ValueNode<Int64Imm> 2}
#  13: @↻_stacked_bi_dynamic_rnn.33:[CNode]144{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]140, [2]: ValueNode<Int64Imm> 3}
#  14: @↻_stacked_bi_dynamic_rnn.33:[CNode]145{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]140, [2]: ValueNode<Int64Imm> 4}
#  15: @↻_stacked_bi_dynamic_rnn.33:[CNode]146{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]140, [2]: ValueNode<Int64Imm> 5}
#  16: @↻_stacked_bi_dynamic_rnn.33:[CNode]147{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]140, [2]: ValueNode<Int64Imm> 6}
#  17: @↻_stacked_bi_dynamic_rnn.33:[CNode]148{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]140, [2]: ValueNode<Int64Imm> 7}


# [No.15] ↓↻_stacked_bi_dynamic_rnn.34
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:469/            if self.has_bias:/
funcgraph fg_34[fg_33](
        %para31 : Ref[Tensor(F32)][1024, 128]    # фw_f_ih
        , %para32 : Ref[Tensor(F32)][1024, 256]    # фw_f_hh
        , %para33 : Ref[Tensor(F32)][1024]    # фb_f_ih
        , %para34 : Ref[Tensor(F32)][1024]    # фb_f_hh
        , %para35 : Ref[Tensor(F32)][1024, 128]    # фw_b_ih
        , %para36 : Ref[Tensor(F32)][1024, 256]    # фw_b_hh
        , %para37 : Ref[Tensor(F32)][1024]    # фb_b_ih
        , %para38 : Ref[Tensor(F32)][1024]    # фb_b_hh
    ) {
    %1 : BoolNoShape = FuncGraph::fg_19(Bool(1))    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:480/            if self.is_lstm:/#[CNode]152
    %2 : FuncNoShape = Primitive::Switch{prim_type=1}(%1, FuncGraph::fg_39, FuncGraph::fg_153)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_39=✓↓↻_stacked_bi_dynamic_rnn.39, fg_153=✗↓↻_stacked_bi_dynamic_rnn.153 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:480/            if self.is_lstm:/#[CNode]154

#------------------------> 21
    %3 : Tuple[Tuple[Tensor(F32)*2]*2]TupleShape(TupleShape((8, 256), (8, 256)), TupleShape((8, 256), (8, 256))) = %2() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:480/            if self.is_lstm:/#[CNode]155
    %4 : Tuple[Tensor(F32)*2]TupleShape((8, 256), (8, 256)) = Primitive::TupleGetItem{prim_type=1}(%3, I64(0))    #(Tuple[Tuple[Tensor(F32)*2]*2]TupleShape(TupleShape((8, 256), (8, 256)), TupleShape((8, 256), (8, 256))), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]156
    %5 : Tuple[Tensor(F32)*2]TupleShape((8, 256), (8, 256)) = Primitive::TupleGetItem{prim_type=1}(%3, I64(1))    #(Tuple[Tuple[Tensor(F32)*2]*2]TupleShape(TupleShape((8, 256), (8, 256)), TupleShape((8, 256), (8, 256))), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]157

#------------------------> 14
    %6 = FuncGraph::fg_35(%4, %5)    #(Tuple[Tensor(F32)*2]TupleShape((8, 256), (8, 256)), Tuple[Tensor(F32)*2]TupleShape((8, 256), (8, 256)))    # fg_35=↓↓↻_stacked_bi_dynamic_rnn.35 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]158
    Primitive::Return{prim_type=1}(%6)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:480/            if self.is_lstm:/#[CNode]159
}
# order:
#   1: @↓↻_stacked_bi_dynamic_rnn.34:[CNode]152{[0]: ValueNode<FuncGraph> bool_.19, [1]: ValueNode<BoolImm> true}
#   2: @↓↻_stacked_bi_dynamic_rnn.34:[CNode]154{[0]: ValueNode<Primitive> Switch, [1]: [CNode]152, [2]: ValueNode<FuncGraph> ✓↓↻_stacked_bi_dynamic_rnn.39, [3]: ValueNode<FuncGraph> ✗↓↻_stacked_bi_dynamic_rnn.153}
#   3: @↓↻_stacked_bi_dynamic_rnn.34:[CNode]155{[0]: [CNode]154}
#   4: @↓↻_stacked_bi_dynamic_rnn.34:[CNode]158{[0]: ValueNode<FuncGraph> ↓↓↻_stacked_bi_dynamic_rnn.35, [1]: [CNode]156, [2]: [CNode]157}
#   5: @↓↻_stacked_bi_dynamic_rnn.34:[CNode]159{[0]: ValueNode<Primitive> Return, [1]: [CNode]158}
#   6: @↓↻_stacked_bi_dynamic_rnn.34:[CNode]156{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]155, [2]: ValueNode<Int64Imm> 0}
#   7: @↓↻_stacked_bi_dynamic_rnn.34:[CNode]157{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]155, [2]: ValueNode<Int64Imm> 1}


# [No.16] ↓↓↻_stacked_bi_dynamic_rnn.35
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:480/            if self.is_lstm:/
funcgraph fg_35[fg_34](
        %para39 : Tuple[Tensor(F32)*2]TupleShape((8, 256), (8, 256))    # фh_f_i
        , %para40 : Tuple[Tensor(F32)*2]TupleShape((8, 256), (8, 256))    # фh_b_i
    ) {
    %1 : BoolNoShape = DoSignaturePrimitive::S-Prim-is_{prim_type=1}(%para25, None)    #(NoneTypeNoShape, NoneTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:486/            if seq_length is None:/#[CNode]160
    %2 : BoolNoShape = FuncGraph::fg_19(%1)    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:486/            if seq_length is None:/#[CNode]161
    %3 : FuncNoShape = Primitive::Switch{prim_type=1}(%2, FuncGraph::fg_162, FuncGraph::fg_163)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_162=✓↓↓↻_stacked_bi_dynamic_rnn.162, fg_163=✗↓↓↻_stacked_bi_dynamic_rnn.163 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:486/            if seq_length is None:/#[CNode]164
    %4 : Tensor(F32)[16, 8, 128] = %3() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:486/            if seq_length is None:/#[CNode]165

#------------------------> 15
    %5 = FuncGraph::fg_36(%4)    #(Tensor(F32)[16, 8, 128])    # fg_36=↓↓↓↻_stacked_bi_dynamic_rnn.36 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]166
    Primitive::Return{prim_type=1}(%5)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:486/            if seq_length is None:/#[CNode]167
}
# order:
#   1: @↓↓↻_stacked_bi_dynamic_rnn.35:[CNode]160{[0]: ValueNode<DoSignaturePrimitive> S-Prim-is_, [1]: seq_length, [2]: ValueNode<None> None}
#   2: @↓↓↻_stacked_bi_dynamic_rnn.35:[CNode]161{[0]: ValueNode<FuncGraph> bool_.19, [1]: [CNode]160}
#   3: @↓↓↻_stacked_bi_dynamic_rnn.35:[CNode]164{[0]: ValueNode<Primitive> Switch, [1]: [CNode]161, [2]: ValueNode<FuncGraph> ✓↓↓↻_stacked_bi_dynamic_rnn.162, [3]: ValueNode<FuncGraph> ✗↓↓↻_stacked_bi_dynamic_rnn.163}
#   4: @↓↓↻_stacked_bi_dynamic_rnn.35:[CNode]165{[0]: [CNode]164}
#   5: @↓↓↻_stacked_bi_dynamic_rnn.35:[CNode]166{[0]: ValueNode<FuncGraph> ↓↓↓↻_stacked_bi_dynamic_rnn.36, [1]: [CNode]165}
#   6: @↓↓↻_stacked_bi_dynamic_rnn.35:[CNode]167{[0]: ValueNode<Primitive> Return, [1]: [CNode]166}


# [No.17] ↓↓↓↻_stacked_bi_dynamic_rnn.36
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:486/            if seq_length is None:/
funcgraph fg_36[fg_35](
        %para41 : Tensor(F32)[16, 8, 128]    # фx_b
    ) {
    %1 : BoolNoShape = DoSignaturePrimitive::S-Prim-is_{prim_type=1}(%para25, None)    #(NoneTypeNoShape, NoneTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:492/            if seq_length is None:/#[CNode]168
    %2 : BoolNoShape = FuncGraph::fg_19(%1)    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:492/            if seq_length is None:/#[CNode]169
    %3 : FuncNoShape = Primitive::Switch{prim_type=1}(%2, FuncGraph::fg_170, FuncGraph::fg_171)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_170=✓↓↓↓↻_stacked_bi_dynamic_rnn.170, fg_171=✗↓↓↓↻_stacked_bi_dynamic_rnn.171 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:492/            if seq_length is None:/#[CNode]172
    %4 : Tensor(F32)[16, 8, 256] = %3() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:492/            if seq_length is None:/#[CNode]173

#------------------------> 16
    %5 = FuncGraph::fg_37(%4)    #(Tensor(F32)[16, 8, 256])    # fg_37=↓↓↓↓↻_stacked_bi_dynamic_rnn.37 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]174
    Primitive::Return{prim_type=1}(%5)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:492/            if seq_length is None:/#[CNode]175
}
# order:
#   1: @↓↓↓↻_stacked_bi_dynamic_rnn.36:[CNode]176{[0]: ValueNode<FuncGraph> _DynamicLSTMCPUGPU.177, [1]: фpre_layer, [2]: фh_f_i, [3]: seq_length, [4]: фw_f_ih, [5]: фw_f_hh, [6]: фb_f_ih, [7]: фb_f_hh}
#   2: @↓↓↓↻_stacked_bi_dynamic_rnn.36:фoutput_f{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]176, [2]: ValueNode<Int64Imm> 0}
#   3: @↓↓↓↻_stacked_bi_dynamic_rnn.36:фh_t_f{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]176, [2]: ValueNode<Int64Imm> 1}
#   4: @↓↓↓↻_stacked_bi_dynamic_rnn.36:[CNode]178{[0]: ValueNode<FuncGraph> _DynamicLSTMCPUGPU.177, [1]: фx_b, [2]: фh_b_i, [3]: seq_length, [4]: фw_b_ih, [5]: фw_b_hh, [6]: фb_b_ih, [7]: фb_b_hh}
#   5: @↓↓↓↻_stacked_bi_dynamic_rnn.36:output_b{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]178, [2]: ValueNode<Int64Imm> 0}
#   6: @↓↓↓↻_stacked_bi_dynamic_rnn.36:фh_t_b{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]178, [2]: ValueNode<Int64Imm> 1}
#   7: @↓↓↓↻_stacked_bi_dynamic_rnn.36:[CNode]168{[0]: ValueNode<DoSignaturePrimitive> S-Prim-is_, [1]: seq_length, [2]: ValueNode<None> None}
#   8: @↓↓↓↻_stacked_bi_dynamic_rnn.36:[CNode]169{[0]: ValueNode<FuncGraph> bool_.19, [1]: [CNode]168}
#   9: @↓↓↓↻_stacked_bi_dynamic_rnn.36:[CNode]172{[0]: ValueNode<Primitive> Switch, [1]: [CNode]169, [2]: ValueNode<FuncGraph> ✓↓↓↓↻_stacked_bi_dynamic_rnn.170, [3]: ValueNode<FuncGraph> ✗↓↓↓↻_stacked_bi_dynamic_rnn.171}
#  10: @↓↓↓↻_stacked_bi_dynamic_rnn.36:[CNode]173{[0]: [CNode]172}
#  11: @↓↓↓↻_stacked_bi_dynamic_rnn.36:[CNode]174{[0]: ValueNode<FuncGraph> ↓↓↓↓↻_stacked_bi_dynamic_rnn.37, [1]: [CNode]173}
#  12: @↓↓↓↻_stacked_bi_dynamic_rnn.36:[CNode]175{[0]: ValueNode<Primitive> Return, [1]: [CNode]174}


# [No.18] ↓↓↓↓↻_stacked_bi_dynamic_rnn.37
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:492/            if seq_length is None:/
funcgraph fg_37[fg_36](
        %para42 : Tensor(F32)[16, 8, 256]    # фoutput_b
    ) {
    %1 : BoolNoShape = FuncGraph::fg_19(Bool(1))    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:498/            if self.is_lstm:/#[CNode]179
    %2 : FuncNoShape = Primitive::Switch{prim_type=1}(%1, FuncGraph::fg_180, FuncGraph::fg_181)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_180=✓↓↓↓↓↻_stacked_bi_dynamic_rnn.180, fg_181=✗↓↓↓↓↻_stacked_bi_dynamic_rnn.181 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:498/            if self.is_lstm:/#[CNode]182
    %3 : Tuple[Tuple[Tensor(F32)*2]*2]TupleShape(TupleShape((1, 8, 256), (1, 8, 256)), TupleShape((1, 8, 256), (1, 8, 256))) = %2() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:498/            if self.is_lstm:/#[CNode]183
    %4 : Tuple[Tensor(F32)*2]TupleShape((1, 8, 256), (1, 8, 256)) = Primitive::TupleGetItem{prim_type=1}(%3, I64(0))    #(Tuple[Tuple[Tensor(F32)*2]*2]TupleShape(TupleShape((1, 8, 256), (1, 8, 256)), TupleShape((1, 8, 256), (1, 8, 256))), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]184
    %5 : Tuple[Tensor(F32)*2]TupleShape((1, 8, 256), (1, 8, 256)) = Primitive::TupleGetItem{prim_type=1}(%3, I64(1))    #(Tuple[Tuple[Tensor(F32)*2]*2]TupleShape(TupleShape((1, 8, 256), (1, 8, 256)), TupleShape((1, 8, 256), (1, 8, 256))), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]185

#------------------------> 17
    %6 = FuncGraph::fg_38(%4, %5)    #(Tuple[Tensor(F32)*2]TupleShape((1, 8, 256), (1, 8, 256)), Tuple[Tensor(F32)*2]TupleShape((1, 8, 256), (1, 8, 256)))    # fg_38=↓↓↓↓↓↻_stacked_bi_dynamic_rnn.38 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]186
    Primitive::Return{prim_type=1}(%6)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:498/            if self.is_lstm:/#[CNode]187
}
# order:
#   1: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]188{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Concat', [1]: ValueNode<Int64Imm> 2}
#   2: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]189{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: фoutput_f, [2]: фoutput_b}
#   3: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:фoutput{[0]: [CNode]188, [1]: [CNode]189}
#   4: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]190{[0]: ValueNode<DoSignaturePrimitive> S-Prim-not_equal, [1]: ValueNode<FP32Imm> 0.000000, [2]: ValueNode<Int64Imm> 0}
#   5: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]191{[0]: ValueNode<FuncGraph> bool_.19, [1]: [CNode]190}
#   6: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]192{[0]: ValueNode<Primitive> Switch, [1]: [CNode]191, [2]: ValueNode<FuncGraph> ↰↓↓↓↓↻_stacked_bi_dynamic_rnn.193, [3]: ValueNode<FuncGraph> ↱↓↓↓↓↻_stacked_bi_dynamic_rnn.194}
#   7: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]195{[0]: [CNode]192}
#   8: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]196{[0]: ValueNode<FuncGraph> bool_.19, [1]: [CNode]195}
#   9: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]197{[0]: ValueNode<Primitive> Switch, [1]: [CNode]196, [2]: ValueNode<FuncGraph> ↰↓↓↓↓↻_stacked_bi_dynamic_rnn.198, [3]: ValueNode<FuncGraph> ↱↓↓↓↓↻_stacked_bi_dynamic_rnn.199}
#  10: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:фpre_layer{[0]: [CNode]197}
#  11: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]179{[0]: ValueNode<FuncGraph> bool_.19, [1]: ValueNode<BoolImm> true}
#  12: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]182{[0]: ValueNode<Primitive> Switch, [1]: [CNode]179, [2]: ValueNode<FuncGraph> ✓↓↓↓↓↻_stacked_bi_dynamic_rnn.180, [3]: ValueNode<FuncGraph> ✗↓↓↓↓↻_stacked_bi_dynamic_rnn.181}
#  13: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]183{[0]: [CNode]182}
#  14: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]186{[0]: ValueNode<FuncGraph> ↓↓↓↓↓↻_stacked_bi_dynamic_rnn.38, [1]: [CNode]184, [2]: [CNode]185}
#  15: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]187{[0]: ValueNode<Primitive> Return, [1]: [CNode]186}
#  16: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]184{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]183, [2]: ValueNode<Int64Imm> 0}
#  17: @↓↓↓↓↻_stacked_bi_dynamic_rnn.37:[CNode]185{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]183, [2]: ValueNode<Int64Imm> 1}


# [No.19] ↓↓↓↓↓↻_stacked_bi_dynamic_rnn.38
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:498/            if self.is_lstm:/
funcgraph fg_38[fg_37](
        %para43 : Tuple[Tensor(F32)*2]TupleShape((1, 8, 256), (1, 8, 256))    # фh_n
        , %para44 : Tuple[Tensor(F32)*2]TupleShape((1, 8, 256), (1, 8, 256))    # фc_n
    ) {
    %1 : $(↻_stacked_bi_dynamic_rnn.33):I64NoShape = MultitypeFuncGraph::add{(Number, Tensor), (Number, Number), (Tuple, Tuple), (Tensor, List), (Tuple, Tensor), (CSRTensor, CSRTensor), (Tensor, Tuple), (Tensor, Number), (COOTensor, COOTensor), (List, Tensor), (List, List), (Tensor, Tensor), (String, String), (COOTensor, Tensor), (RowTensor, Tensor), (NoneType, NoneType), (Tensor, COOTensor)}(%para26, I64(1))    #(I64NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]32
    %2 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):BoolNoShape = DoSignaturePrimitive::S-Prim-not_equal{prim_type=1}(F32(0), I64(0))    #(F32NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:497/            pre_layer = self.dropout_op(output) if (self.dropout != 0 and i < self.num_layers - 1) else output/#[CNode]190
    %3 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):BoolNoShape = FuncGraph::fg_19(%2)    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:497/            pre_layer = self.dropout_op(output) if (self.dropout != 0 and i < self.num_layers - 1) else output/#[CNode]191
    %4 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):FuncNoShape = Primitive::Switch{prim_type=1}(%3, FuncGraph::fg_193, FuncGraph::fg_194)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_193=↰↓↓↓↓↻_stacked_bi_dynamic_rnn.193, fg_194=↱↓↓↓↓↻_stacked_bi_dynamic_rnn.194 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:497/            pre_layer = self.dropout_op(output) if (self.dropout != 0 and i < self.num_layers - 1) else output/#[CNode]192
    %5 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):BoolNoShape = %4() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:497/            pre_layer = self.dropout_op(output) if (self.dropout != 0 and i < self.num_layers - 1) else output/#[CNode]195
    %6 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):BoolNoShape = FuncGraph::fg_19(%5)    #(BoolNoShape)    # fg_19=bool_.19 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:497/            pre_layer = self.dropout_op(output) if (self.dropout != 0 and i < self.num_layers - 1) else output/#[CNode]196
    %7 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):FuncNoShape = Primitive::Switch{prim_type=1}(%6, FuncGraph::fg_198, FuncGraph::fg_199)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_198=↰↓↓↓↓↻_stacked_bi_dynamic_rnn.198, fg_199=↱↓↓↓↓↻_stacked_bi_dynamic_rnn.199 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:497/            pre_layer = self.dropout_op(output) if (self.dropout != 0 and i < self.num_layers - 1) else output/#[CNode]197
    %8 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):Tensor(F32)[16, 8, 512] = %7() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#фpre_layer
    %9 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):FuncNoShape = ClassType(I64(2))    #(I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:496/            output = P.Concat(2)((output_f, output_b))/#[CNode]188
    %10 : $(↓↓↓↻_stacked_bi_dynamic_rnn.36):Tuple[Tensor(F32),Tuple[Tensor(F32)*2]]TupleShape((16, 8, 256), TupleShape((1, 8, 256), (1, 8, 256))) = FuncGraph::fg_177(%para27, %para39, %para25, %para31, %para32, %para33, %para34)    #(Tensor(F32)[16, 8, 128], Tuple[Tensor(F32)*2]TupleShape((8, 256), (8, 256)), NoneTypeNoShape, Ref[Tensor(F32)][1024, 128], Ref[Tensor(F32)][1024, 256], Ref[Tensor(F32)][1024], Ref[Tensor(F32)][1024])    # fg_177=_DynamicLSTMCPUGPU.177 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:490/            output_f, h_t_f = self.rnn(pre_layer, h_f_i, seq_length, w_f_ih, w_f_hh, b_f_ih, b_f_hh)/#[CNode]176
    %11 : $(↓↓↓↻_stacked_bi_dynamic_rnn.36):Tensor(F32)[16, 8, 256] = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%10, I64(0))    #(Tuple[Tensor(F32),Tuple[Tensor(F32)*2]]TupleShape((16, 8, 256), TupleShape((1, 8, 256), (1, 8, 256))), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:496/            output = P.Concat(2)((output_f, output_b))/#фoutput_f
    %12 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):Tuple[Tensor(F32)*2]TupleShape((16, 8, 256), (16, 8, 256)) = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%11, %para42)    #(Tensor(F32)[16, 8, 256], Tensor(F32)[16, 8, 256]) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:496/            output = P.Concat(2)((output_f, output_b))/#[CNode]189
    %13 : $(↓↓↓↓↻_stacked_bi_dynamic_rnn.37):Tensor(F32)[16, 8, 512] = %9(%12)    #(Tuple[Tensor(F32)*2]TupleShape((16, 8, 256), (16, 8, 256))) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:508/            return output, (h_n.view(h[0].shape), c_n.view(h[1].shape))/#фoutput

#------------------------> 18
    %14 = FuncGraph::fg_31(%1, %8, %para43, %para44, %13)    #(I64NoShape, Tensor(F32)[16, 8, 512], Tuple[Tensor(F32)*2]TupleShape((1, 8, 256), (1, 8, 256)), Tuple[Tensor(F32)*2]TupleShape((1, 8, 256), (1, 8, 256)), Tensor(F32)[16, 8, 512])    # fg_31=↵_stacked_bi_dynamic_rnn.31 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]200
    Primitive::Return{prim_type=1}(%14)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]201
}
# order:
#   1: @↓↓↓↓↓↻_stacked_bi_dynamic_rnn.38:[CNode]201{[0]: ValueNode<Primitive> Return, [1]: [CNode]200}
#   2: @↓↓↓↓↓↻_stacked_bi_dynamic_rnn.38:[CNode]200{[0]: ValueNode<FuncGraph> ↵_stacked_bi_dynamic_rnn.31, [1]: [CNode]32, [2]: фpre_layer, [3]: фh_n, [4]: фc_n, [5]: фoutput}


# [No.20] ✓↓↻_stacked_bi_dynamic_rnn.39
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:480/            if self.is_lstm:/
funcgraph fg_39[fg_33](
) {
    %1 : Tensor(F32)[2, 8, 256] = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%para24, I64(0))    #(Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#[CNode]202
    %2 : $(_stacked_bi_dynamic_rnn.30):Tuple[I64*2]TupleShape(NoShape, NoShape) = DoSignaturePrimitive::S-Prim-make_range{prim_type=1}(I64(2))    #(I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:467/        for i in range(self.num_layers):/#[CNode]127
    %3 : $(↻_stacked_bi_dynamic_rnn.33):I64NoShape = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%2, %para26)    #(Tuple[I64*2]TupleShape(NoShape, NoShape), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:497/            pre_layer = self.dropout_op(output) if (self.dropout != 0 and i < self.num_layers - 1) else output/#фi
    %4 : $(↻_stacked_bi_dynamic_rnn.33):I64NoShape = DoSignaturePrimitive::S-Prim-mul{prim_type=1}(%3, I64(2))    #(I64NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#фoffset

#------------------------> 22
    %5 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%1, %4)    #(Tensor(F32)[2, 8, 256], I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#[CNode]203
    %6 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%para24, I64(1))    #(Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#[CNode]204
    %7 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%6, %4)    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#[CNode]205
    %8 = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%5, %7)    #(Undefined, Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#h_f_i
    %9 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%para24, I64(0))    #(Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:482/                h_b_i = (h[0][offset + 1], h[1][offset + 1])/#[CNode]206
    %10 = DoSignaturePrimitive::S-Prim-add{prim_type=1}(%4, I64(1))    #(I64NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:482/                h_b_i = (h[0][offset + 1], h[1][offset + 1])/#[CNode]207
    %11 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%9, %10)    #(Undefined, Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:482/                h_b_i = (h[0][offset + 1], h[1][offset + 1])/#[CNode]208
    %12 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%para24, I64(1))    #(Tuple[Tensor(F32)*2]TupleShape((2, 8, 256), (2, 8, 256)), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:482/                h_b_i = (h[0][offset + 1], h[1][offset + 1])/#[CNode]209
    %13 = DoSignaturePrimitive::S-Prim-add{prim_type=1}(%4, I64(1))    #(I64NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:482/                h_b_i = (h[0][offset + 1], h[1][offset + 1])/#[CNode]210
    %14 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%12, %13)    #(Undefined, Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:482/                h_b_i = (h[0][offset + 1], h[1][offset + 1])/#[CNode]211
    %15 = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%11, %14)    #(Undefined, Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:482/                h_b_i = (h[0][offset + 1], h[1][offset + 1])/#h_b_i
    %16 = Primitive::MakeTuple{prim_type=1}(%8, %15)    #(Undefined, Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:571/            x_n, hx_n = self._stacked_bi_dynamic_rnn(x, hx, seq_length)/#[CNode]212
    Primitive::Return{prim_type=1}(%16)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:480/            if self.is_lstm:/#[CNode]213
}
# order:
#   1: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]202{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: h, [2]: ValueNode<Int64Imm> 0}
#   2: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]203{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]202, [2]: фoffset}
#   3: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]204{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: h, [2]: ValueNode<Int64Imm> 1}
#   4: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]205{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]204, [2]: фoffset}
#   5: @✓↓↻_stacked_bi_dynamic_rnn.39:h_f_i{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: [CNode]203, [2]: [CNode]205}
#   6: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]206{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: h, [2]: ValueNode<Int64Imm> 0}
#   7: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]207{[0]: ValueNode<DoSignaturePrimitive> S-Prim-add, [1]: фoffset, [2]: ValueNode<Int64Imm> 1}
#   8: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]208{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]206, [2]: [CNode]207}
#   9: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]209{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: h, [2]: ValueNode<Int64Imm> 1}
#  10: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]210{[0]: ValueNode<DoSignaturePrimitive> S-Prim-add, [1]: фoffset, [2]: ValueNode<Int64Imm> 1}
#  11: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]211{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]209, [2]: [CNode]210}
#  12: @✓↓↻_stacked_bi_dynamic_rnn.39:h_b_i{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: [CNode]208, [2]: [CNode]211}
#  13: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]213{[0]: ValueNode<Primitive> Return, [1]: [CNode]212}
#  14: @✓↓↻_stacked_bi_dynamic_rnn.39:[CNode]212{[0]: ValueNode<Primitive> MakeTuple, [1]: h_f_i, [2]: h_b_i}


# [No.21] _tensor_getitem_by_number.40
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/getitem_impl.py:208/def _tensor_getitem_by_number(data, number_index):/
funcgraph fg_40(
        %para45 : Tensor(F32)[2, 8, 256]    # data
        , %para46 : I64NoShape    # number_index
    ) {
    %1 : ExternalTypeNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, compile_utils)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#[CNode]203
    %2 : FuncNoShape = Primitive::getattr{prim_type=1}(%1, "tensor_index_by_number")    #(ExternalTypeNoShape, StringNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#[CNode]203

#------------------------> 23
    %3 = %2(%para45, %para46)    #(Tensor(F32)[2, 8, 256], I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#[CNode]203
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/nn/layer/rnns.py:481/                h_f_i = (h[0][offset], h[1][offset])/#[CNode]203
}
# order:
#   1: @_tensor_getitem_by_number.214:[CNode]215{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   2: @_tensor_getitem_by_number.214:[CNode]216{[0]: [CNode]215, [1]: data, [2]: number_index}
#   3: @_tensor_getitem_by_number.40:[CNode]203{[0]: [CNode]203, [1]: data, [2]: number_index}
#   4: @_tensor_getitem_by_number.40:[CNode]203{[0]: ValueNode<Primitive> Return, [1]: [CNode]203}


# [No.22] tensor_index_by_number.41
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:347/def tensor_index_by_number(data, number_index):/
funcgraph fg_41(
        %para47 : Tensor(F32)[2, 8, 256]    # data
        , %para48 : I64NoShape    # number_index
    ) {
    %1 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::CommonOPS, bool_)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]217
    %2 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, isinstance)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]218
    %3 : TypeTypeNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, bool)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]219
    %4 : BoolNoShape = %2(%para48, %3)    #(I64NoShape, TypeTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]220
    %5 : BoolNoShape = %1(%4)    #(BoolNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]221
    %6 : FuncNoShape = Primitive::Switch{prim_type=1}(%5, FuncGraph::fg_222, FuncGraph::fg_42)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_222=✓tensor_index_by_number.222, fg_42=✗tensor_index_by_number.42 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]223

#------------------------> 24
    %7 = %6() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]224
    Primitive::Return{prim_type=1}(%7)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]225
}
# order:
#   1: @tensor_index_by_number.41:[CNode]226{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   2: @tensor_index_by_number.41:[CNode]227{[0]: [CNode]226, [1]: number_index, [2]: [CNode]219}
#   3: @tensor_index_by_number.41:[CNode]220{[0]: [CNode]218, [1]: number_index, [2]: [CNode]219}
#   4: @tensor_index_by_number.41:[CNode]221{[0]: [CNode]217, [1]: [CNode]220}
#   5: @tensor_index_by_number.41:[CNode]228{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> _tensor_index_by_bool}
#   6: @tensor_index_by_number.41:[CNode]223{[0]: ValueNode<Primitive> Switch, [1]: [CNode]221, [2]: ValueNode<FuncGraph> ✓tensor_index_by_number.222, [3]: ValueNode<FuncGraph> ✗tensor_index_by_number.42}
#   7: @tensor_index_by_number.41:[CNode]224{[0]: [CNode]223}
#   8: @tensor_index_by_number.41:[CNode]225{[0]: ValueNode<Primitive> Return, [1]: [CNode]224}
#   9: @tensor_index_by_number.41:[CNode]229{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> const_utils}


# [No.23] ✗tensor_index_by_number.42
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/
funcgraph fg_42[fg_41](
) {

#------------------------> 25
    %1 = FuncGraph::fg_43()    # fg_43=↓tensor_index_by_number.43 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]230
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]231
}
# order:
#   1: @✗tensor_index_by_number.42:[CNode]230{[0]: ValueNode<FuncGraph> ↓tensor_index_by_number.43}
#   2: @✗tensor_index_by_number.42:[CNode]231{[0]: ValueNode<Primitive> Return, [1]: [CNode]230}


# [No.24] ↓tensor_index_by_number.43
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/
funcgraph fg_43[fg_41](
) {
    %1 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::CommonOPS, bool_)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:351/    if isinstance(number_index, int):/#[CNode]232
    %2 : $(tensor_index_by_number.41):FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, isinstance)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:349/    if isinstance(number_index, bool):/#[CNode]218
    %3 : $(tensor_index_by_number.41):TypeTypeNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, int)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:351/    if isinstance(number_index, int):/#[CNode]233
    %4 : BoolNoShape = %2(%para48, %3)    #(I64NoShape, TypeTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:351/    if isinstance(number_index, int):/#[CNode]234
    %5 : BoolNoShape = %1(%4)    #(BoolNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:351/    if isinstance(number_index, int):/#[CNode]235
    %6 : FuncNoShape = Primitive::Switch{prim_type=1}(%5, FuncGraph::fg_44, FuncGraph::fg_236)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_44=✓↓tensor_index_by_number.44, fg_236=✗↓tensor_index_by_number.236 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:351/    if isinstance(number_index, int):/#[CNode]237

#------------------------> 26
    %7 = %6() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:351/    if isinstance(number_index, int):/#[CNode]238
    Primitive::Return{prim_type=1}(%7)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:351/    if isinstance(number_index, int):/#[CNode]239
}
# order:
#   1: @↓tensor_index_by_number.43:[CNode]240{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   2: @↓tensor_index_by_number.43:[CNode]241{[0]: [CNode]240, [1]: number_index, [2]: [CNode]233}
#   3: @↓tensor_index_by_number.43:[CNode]234{[0]: [CNode]218, [1]: number_index, [2]: [CNode]233}
#   4: @↓tensor_index_by_number.43:[CNode]235{[0]: [CNode]232, [1]: [CNode]234}
#   5: @↓tensor_index_by_number.43:[CNode]237{[0]: ValueNode<Primitive> Switch, [1]: [CNode]235, [2]: ValueNode<FuncGraph> ✓↓tensor_index_by_number.44, [3]: ValueNode<FuncGraph> ✗↓tensor_index_by_number.236}
#   6: @↓tensor_index_by_number.43:[CNode]238{[0]: [CNode]237}
#   7: @↓tensor_index_by_number.43:[CNode]239{[0]: ValueNode<Primitive> Return, [1]: [CNode]238}


# [No.25] ✓↓tensor_index_by_number.44
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:351/    if isinstance(number_index, int):/
funcgraph fg_44[fg_41](
) {
    %1 : $(tensor_index_by_number.41):FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, _tensor_index_by_integer)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]242

#------------------------> 27
    %2 = %1(%para47, %para48)    #(Tensor(F32)[2, 8, 256], I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]243
    Primitive::Return{prim_type=1}(%2)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]244
}
# order:
#   1: @✓↓tensor_index_by_number.44:[CNode]245{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   2: @✓↓tensor_index_by_number.44:[CNode]246{[0]: [CNode]245, [1]: data, [2]: number_index}
#   3: @✓↓tensor_index_by_number.44:[CNode]243{[0]: [CNode]242, [1]: data, [2]: number_index}
#   4: @✓↓tensor_index_by_number.44:[CNode]244{[0]: ValueNode<Primitive> Return, [1]: [CNode]243}


# [No.26] _tensor_index_by_integer.45
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:387/def _tensor_index_by_integer(data, int_index):/
funcgraph fg_45(
        %para49 : Tensor(F32)[2, 8, 256]    # фdata
        , %para50 : I64NoShape    # фint_index
    ) {
    %1 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::CommonOPS, bool_)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]247
    %2 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::CommonOPS, bool_)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]248
    %3 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::Ast, lt)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:0/#[CNode]249
    %4 : I64NoShape = Primitive::getattr{prim_type=1}(%para49, "ndim")    #(Tensor(F32)[2, 8, 256], StringNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]250
    %5 : BoolNoShape = %3(%4, I64(1))    #(I64NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]251
    %6 : BoolNoShape = %2(%5)    #(BoolNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]252
    %7 : FuncNoShape = Primitive::Switch{prim_type=1}(%6, FuncGraph::fg_253, FuncGraph::fg_254)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_253=↰_tensor_index_by_integer.253, fg_254=↱_tensor_index_by_integer.254 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]255
    %8 : BoolNoShape = %7() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]256
    %9 : BoolNoShape = %1(%8)    #(BoolNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]257
    %10 : FuncNoShape = Primitive::Switch{prim_type=1}(%9, FuncGraph::fg_258, FuncGraph::fg_46)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_258=✓_tensor_index_by_integer.258, fg_46=✗_tensor_index_by_integer.46 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]259

#------------------------> 28
    %11 = %10() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]260
    Primitive::Return{prim_type=1}(%11)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]261
}
# order:
#   1: @_tensor_index_by_integer.45:[CNode]250{[0]: ValueNode<Primitive> getattr, [1]: фdata, [2]: ValueNode<StringImm> ndim}
#   2: @_tensor_index_by_integer.45:[CNode]251{[0]: [CNode]249, [1]: [CNode]250, [2]: ValueNode<Int64Imm> 1}
#   3: @_tensor_index_by_integer.45:[CNode]252{[0]: [CNode]248, [1]: [CNode]251}
#   4: @_tensor_index_by_integer.45:[CNode]255{[0]: ValueNode<Primitive> Switch, [1]: [CNode]252, [2]: ValueNode<FuncGraph> ↰_tensor_index_by_integer.253, [3]: ValueNode<FuncGraph> ↱_tensor_index_by_integer.254}
#   5: @_tensor_index_by_integer.45:[CNode]256{[0]: [CNode]255}
#   6: @_tensor_index_by_integer.45:[CNode]257{[0]: [CNode]247, [1]: [CNode]256}
#   7: @_tensor_index_by_integer.45:[CNode]259{[0]: ValueNode<Primitive> Switch, [1]: [CNode]257, [2]: ValueNode<FuncGraph> ✓_tensor_index_by_integer.258, [3]: ValueNode<FuncGraph> ✗_tensor_index_by_integer.46}
#   8: @_tensor_index_by_integer.45:[CNode]260{[0]: [CNode]259}
#   9: @_tensor_index_by_integer.45:[CNode]261{[0]: ValueNode<Primitive> Return, [1]: [CNode]260}
#  10: @_tensor_index_by_integer.45:фcheck_range{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> check_range}
#  11: @_tensor_index_by_integer.45:фget_stride_info_from_integer{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> get_stride_info_from_integer}


# [No.27] ✗_tensor_index_by_integer.46
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/
funcgraph fg_46[fg_45](
) {

#------------------------> 29
    %1 = FuncGraph::fg_47()    # fg_47=↓_tensor_index_by_integer.47 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]262
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/#[CNode]263
}
# order:
#   1: @✗_tensor_index_by_integer.46:[CNode]263{[0]: ValueNode<Primitive> Return, [1]: [CNode]262}
#   2: @✗_tensor_index_by_integer.46:[CNode]262{[0]: ValueNode<FuncGraph> ↓_tensor_index_by_integer.47}


# [No.28] ↓_tensor_index_by_integer.47
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:389/    if data.ndim < 1 or data.ndim > 8:/
funcgraph fg_47[fg_45](
) {
    %1 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::CommonOPS, bool_)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/#[CNode]264
    %2 : $(_tensor_index_by_integer.45):FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, is_shape_unknown)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/#фis_shape_unknown
    %3 : $(_tensor_index_by_integer.45):ExternalTypeNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, F)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:392/    data_shape = F.shape(data)/#фF
    %4 : FuncNoShape = Primitive::getattr{prim_type=1}(%3, "shape")    #(ExternalTypeNoShape, StringNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:392/    data_shape = F.shape(data)/#[CNode]265
    %5 : Tuple[I64*3]TupleShape(NoShape, NoShape, NoShape) = %4(%para49)    #(Tensor(F32)[2, 8, 256]) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:392/    data_shape = F.shape(data)/#data_shape
    %6 : BoolNoShape = %2(%5)    #(Tuple[I64*3]TupleShape(NoShape, NoShape, NoShape)) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/#[CNode]266
    %7 : BoolNoShape = %1(%6)    #(BoolNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/#[CNode]267
    %8 : FuncNoShape = Primitive::Switch{prim_type=1}(%7, FuncGraph::fg_268, FuncGraph::fg_48)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_268=✓↓_tensor_index_by_integer.268, fg_48=✗↓_tensor_index_by_integer.48 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/#[CNode]269

#------------------------> 30
    %9 = %8() #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/#[CNode]270
    %10 = Primitive::TupleGetItem{prim_type=1}(%9, I64(0))    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]271
    %11 = Primitive::TupleGetItem{prim_type=1}(%9, I64(1))    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]272
    %12 = Primitive::TupleGetItem{prim_type=1}(%9, I64(2))    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]273
    %13 = Primitive::TupleGetItem{prim_type=1}(%9, I64(3))    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]274
    %14 = FuncGraph::fg_275(%10, %11, %12, %13)    #(Undefined, Undefined, Undefined, Undefined)    # fg_275=↓↓_tensor_index_by_integer.275 #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]276
    Primitive::Return{prim_type=1}(%14)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/#[CNode]277
}
# order:
#   1: @↓_tensor_index_by_integer.47:фF{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> F}
#   2: @↓_tensor_index_by_integer.47:[CNode]278{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   3: @↓_tensor_index_by_integer.47:[CNode]279{[0]: [CNode]278, [1]: фdata}
#   4: @↓_tensor_index_by_integer.47:data_shape{[0]: [CNode]265, [1]: фdata}
#   5: @↓_tensor_index_by_integer.47:фis_shape_unknown{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> is_shape_unknown}
#   6: @↓_tensor_index_by_integer.47:[CNode]280{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   7: @↓_tensor_index_by_integer.47:[CNode]281{[0]: [CNode]280, [1]: data_shape}
#   8: @↓_tensor_index_by_integer.47:[CNode]266{[0]: фis_shape_unknown, [1]: data_shape}
#   9: @↓_tensor_index_by_integer.47:[CNode]267{[0]: [CNode]264, [1]: [CNode]266}
#  10: @↓_tensor_index_by_integer.47:фcheck_range{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> check_range}
#  11: @↓_tensor_index_by_integer.47:фget_stride_info_from_integer{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> get_stride_info_from_integer}
#  12: @↓_tensor_index_by_integer.47:фconst_utils{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> const_utils}
#  13: @↓_tensor_index_by_integer.47:[CNode]269{[0]: ValueNode<Primitive> Switch, [1]: [CNode]267, [2]: ValueNode<FuncGraph> ✓↓_tensor_index_by_integer.268, [3]: ValueNode<FuncGraph> ✗↓_tensor_index_by_integer.48}
#  14: @↓_tensor_index_by_integer.47:[CNode]270{[0]: [CNode]269}
#  15: @↓_tensor_index_by_integer.47:[CNode]276{[0]: ValueNode<FuncGraph> ↓↓_tensor_index_by_integer.275, [1]: [CNode]271, [2]: [CNode]272, [3]: [CNode]273, [4]: [CNode]274}
#  16: @↓_tensor_index_by_integer.47:[CNode]277{[0]: ValueNode<Primitive> Return, [1]: [CNode]276}
#  17: @↓_tensor_index_by_integer.47:фrange{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> range}
#  18: @↓_tensor_index_by_integer.47:фlen{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> len}
#  19: @↓_tensor_index_by_integer.47:фstrided_slice{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops._compile_utils', [2]: ValueNode<Symbol> strided_slice}
#  20: @↓_tensor_index_by_integer.47:[CNode]271{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]270, [2]: ValueNode<Int64Imm> 0}
#  21: @↓_tensor_index_by_integer.47:[CNode]272{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]270, [2]: ValueNode<Int64Imm> 1}
#  22: @↓_tensor_index_by_integer.47:[CNode]273{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]270, [2]: ValueNode<Int64Imm> 2}
#  23: @↓_tensor_index_by_integer.47:[CNode]274{[0]: ValueNode<Primitive> TupleGetItem, [1]: [CNode]270, [2]: ValueNode<Int64Imm> 3}


# [No.29] ✗↓_tensor_index_by_integer.48
# In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/
funcgraph fg_48[fg_47](
) {
    %1 : $(_tensor_index_by_integer.45):ExternalTypeNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, F)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:392/    data_shape = F.shape(data)/#фF
    %2 : $(↓_tensor_index_by_integer.47):FuncNoShape = Primitive::getattr{prim_type=1}(%1, "shape")    #(ExternalTypeNoShape, StringNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:392/    data_shape = F.shape(data)/#[CNode]265
    %3 : $(↓_tensor_index_by_integer.47):Tuple[I64*3]TupleShape(NoShape, NoShape, NoShape) = %2(%para49)    #(Tensor(F32)[2, 8, 256]) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:392/    data_shape = F.shape(data)/#data_shape
    %4 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::CommonOPS, getitem)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:399/        begin_strides, end_strides, step_strides = \/#[CNode]282
    %5 : $(_tensor_index_by_integer.45):ExternalTypeNoShape = Primitive::resolve{prim_type=1}(NameSpace::SymbolStr, const_utils)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:398/        transformed_number = const_utils.check_range(int_index, data_shape[0])/#фconst_utils
    %6 : FuncNoShape = Primitive::getattr{prim_type=1}(%5, "get_stride_info_from_integer")    #(ExternalTypeNoShape, StringNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:400/            const_utils.get_stride_info_from_integer(data_shape, transformed_number)/#[CNode]283
    %7 : FuncNoShape = Primitive::getattr{prim_type=1}(%5, "check_range")    #(ExternalTypeNoShape, StringNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:398/        transformed_number = const_utils.check_range(int_index, data_shape[0])/#[CNode]284
    %8 : FuncNoShape = Primitive::resolve{prim_type=1}(NameSpace::CommonOPS, getitem)    #(ExternalTypeNoShape, ExternalTypeNoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:398/        transformed_number = const_utils.check_range(int_index, data_shape[0])/#[CNode]285
    %9 : I64NoShape = %8(%3, I64(0))    #(Tuple[I64*3]TupleShape(NoShape, NoShape, NoShape), I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:398/        transformed_number = const_utils.check_range(int_index, data_shape[0])/#[CNode]286

#------------------------> 31
    %10 = %7(%para50, %9)    #(I64NoShape, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:398/        transformed_number = const_utils.check_range(int_index, data_shape[0])/#transformed_number
    %11 = %6(%3, %10)    #(Tuple[I64*3]TupleShape(NoShape, NoShape, NoShape), Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:400/            const_utils.get_stride_info_from_integer(data_shape, transformed_number)/#[CNode]287
    %12 = %4(%11, I64(0))    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:399/        begin_strides, end_strides, step_strides = \/#begin_strides
    %13 = %4(%11, I64(1))    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:399/        begin_strides, end_strides, step_strides = \/#end_strides
    %14 = %4(%11, I64(2))    #(Undefined, I64NoShape) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:399/        begin_strides, end_strides, step_strides = \/#step_strides
    %15 = Primitive::MakeTuple{prim_type=1}(%3, %12, %13, %14)    #(Tuple[I64*3]TupleShape(NoShape, NoShape, NoShape), Undefined, Undefined, Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:352/        return _tensor_index_by_integer(data, number_index)/#[CNode]288
    Primitive::Return{prim_type=1}(%15)    #(Undefined) #scope: Default/seq_encoder-LSTM
      # In file /opt/anaconda3/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/_compile_utils.py:393/    if is_shape_unknown(data_shape):/#[CNode]289
}
# order:
#   1: @✗↓_tensor_index_by_integer.48:[CNode]286{[0]: [CNode]285, [1]: data_shape, [2]: ValueNode<Int64Imm> 0}
#   2: @✗↓_tensor_index_by_integer.48:[CNode]290{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   3: @✗↓_tensor_index_by_integer.48:[CNode]291{[0]: [CNode]290, [1]: фint_index, [2]: [CNode]286}
#   4: @✗↓_tensor_index_by_integer.48:transformed_number{[0]: [CNode]284, [1]: фint_index, [2]: [CNode]286}
#   5: @✗↓_tensor_index_by_integer.48:[CNode]292{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   6: @✗↓_tensor_index_by_integer.48:[CNode]293{[0]: [CNode]292, [1]: data_shape, [2]: transformed_number}
#   7: @✗↓_tensor_index_by_integer.48:[CNode]287{[0]: [CNode]283, [1]: data_shape, [2]: transformed_number}
#   8: @✗↓_tensor_index_by_integer.48:begin_strides{[0]: [CNode]282, [1]: [CNode]287, [2]: ValueNode<Int64Imm> 0}
#   9: @✗↓_tensor_index_by_integer.48:end_strides{[0]: [CNode]282, [1]: [CNode]287, [2]: ValueNode<Int64Imm> 1}
#  10: @✗↓_tensor_index_by_integer.48:step_strides{[0]: [CNode]282, [1]: [CNode]287, [2]: ValueNode<Int64Imm> 2}
#  11: @✗↓_tensor_index_by_integer.48:[CNode]289{[0]: ValueNode<Primitive> Return, [1]: [CNode]288}
#  12: @✗↓_tensor_index_by_integer.48:[CNode]288{[0]: ValueNode<Primitive> MakeTuple, [1]: data_shape, [2]: begin_strides, [3]: end_strides, [4]: step_strides}


#===============================================================================
# num of function graphs in stack: 29/34 (Ignored 5 internal frames).

system:
  mode: 1 # 0 for graph mode, 1 for pynative mode in MindSpore
  distribute: False 
  amp_level: 'O0'
  seed: 42
  val_while_train: True
  ckpt_save_dir: './tmp_det'

model:
  type: det
  transform: null
  backbone:
    name: det_resnet50
    pretrained: False
  neck:
    name: DBFPN
    out_channels: 256
    bias: False
    use_asf: False # enable it for DB++ 
  head:
    name: DBHead 
    k: 50
    bias: False
    adaptive: True
    serial: False
 
postprocess:
  name: DBPostprocess
  region_type: 'quad'
  thresh: 0.3
  box_thresh: 0.55 # TODO: this value is 0.55 in modelzoo and but 0.7 in paddle
  max_candidates: 1000
  unclip_ratio: 1.5
 
metric:
  name: DetMetric
  main_indicator: hmean

loss:
  name: L1BalanceCELoss  
  eps: 0.000001
  l1_scale: 10
  bce_scale: 5 
  bce_replace: bceloss

scheduler: 
  scheduler: "cosine_decay"
  min_lr: 0.00001
  lr: 0.001
  num_epochs: 300
  warmup_epochs: 0
  decay_epochs: 280

optimizer:
  opt: "momentum"
  filter_bias_and_bn: True
  momentum: 0.9
  weight_decay: 0.0001
  loss_scale: 1.0
  use_nesterov: False

train:
  dataset_sink_mode: False
  dataset:
    type: DetDataset
    data_dir: /data/ocr_datasets/ic15/text_localization/train
    label_files: /data/ocr_datasets/ic15/text_localization/train/train_icdar15_label.txt
    #data_dir: /Users/Samit/Data/datasets/ic15/det/train
    #label_files: /Users/Samit/Data/datasets/ic15/det/train/train_icdar2015_label.txt
    sample_ratios: [1.0]
    shuffle: True
    transform_pipeline:
      - DecodeImage: 
          img_mode: BGR
          to_float32: False
      - DetLabelEncode:  
      - MZResizeByGrid: 
          #denominator: 32
          divisor: 32
          transform_polys: True # originally in modelzoo, it doesn't transform polys
      - MZRandomScaleByShortSide: 
          short_side: 736
      - IaaAugment: 
          augmenter_args:
            - {'type': 'Affine', 'args': {'rotate': [-10, 10]}}
            - {'type': 'Fliplr', 'args': {'p': 0.5}}
      - MZRandomCropData: 
          max_tries: 100 
          min_crop_side_ratio: 0.1
          crop_size: [640, 640]
      - MZResizeByGrid: 
          #denominator: 32
          divisor: 32
          transform_polys: True
      #- MakeShrinkMap: 
      - MZMakeSegDetectionData: 
          min_text_size: 8
          shrink_ratio: 0.4
      #- 'MakeBorderMap': 
      - MZMakeBorderMap:
          shrink_ratio: 0.4
          thresh_min: 0.3
          thresh_max: 0.7
      - MZRandomColorAdjust: 
          brightness: 0.1255 #32.0 / 255
          saturation: 0.5
          to_numpy: True
      #{'MZIrregularNormToCHW': None},
      - NormalizeImage: 
          bgr_to_rgb: True
          is_hwc: True
          mean : [123.675, 116.28, 103.53]
          std : [58.395, 57.12, 57.375]
      - ToCHWImage: 
    #  the order of the dataloader list, matching the network input and the input labels for the loss function, and optional data for debug/visaulize 
    output_keys: ['image', 'shrink_map', 'shrink_mask', 'threshold_map', 'threshold_mask'] #'img_path'] 
    num_keys_to_net: 1 # num inputs for network forward func
    #keys_for_loss: 4 # num labels for loss func
     
  loader:
      shuffle: True # TODO: tbc
      batch_size: 16
      drop_remainder: True
      max_rowsize: 20
      num_workers: 2

eval:
  dataset_sink_mode: False
  dataset:
    type: DetDataset
    data_dir: /data/ocr_datasets/ic15/text_localization/test
    label_files: /data/ocr_datasets/ic15/text_localization/test/test_icdar2015_label.txt
    #data_dir: /Users/Samit/Data/datasets/ic15/det/test
    #label_files: /Users/Samit/Data/datasets/ic15/det/test/test_icdar2015_label.txt
    sample_ratios: [1.0]
    shuffle: False
    transform_pipeline:
      - DecodeImage: 
          img_mode: BGR
          to_float32: False
      - DetLabelEncode:  
      - MZScalePad: 
          eval_size: [736, 1280] # h, w
      - NormalizeImage: 
          bgr_to_rgb: True
          is_hwc: True
          mean : [123.675, 116.28, 103.53]
          std : [58.395, 57.12, 57.375]
      - ToCHWImage: 
    #  the order of the dataloader list, matching the network input and the labels for evalution 
    output_keys: ['image', 'polys', 'ignore_tags'] #'shape'] #'img_path'] 
    num_keys_to_net: 1 # num inputs for network forward func
    num_keys_of_labels: 2 # num labels 
     
     
  loader:
      shuffle: False
      batch_size: 1 # TODO: due to dynamic shape of polygons (num of boxes varies), BS has to be 1
      drop_remainder: False 
      max_rowsize: 20
      num_workers: 1
